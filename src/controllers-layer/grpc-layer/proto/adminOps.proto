
syntax = "proto3";

package adminOps;

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
message branchStaffAssignment {
    string id = 1;
    string branchId = 2;
    string userId = 3;
    int32 role = 4;
    string assignedByUserId = 5;
}
message issueEscalation {
    string id = 1;
    string branchId = 2;
    string raisedByUserId = 3;
    string assignedToUserId = 4;
    int32 status = 5;
    int32 escalationType = 6;
    string description = 7;
    repeated google.protobuf.Struct log = 8;
}
message mongoAdminConfig {
    string id = 1;
    int32 configType = 2;
    string targetObject = 3;
    google.protobuf.Struct configDetails = 4;
    int32 status = 5;
}
message externalNotificationConfig {
    string id = 1;
    int32 providerType = 2;
    string name = 3;
    google.protobuf.Struct settings = 4;
    int32 status = 5;
}
message systemBackupAudit {
    string id = 1;
    int32 type = 2;
    google.protobuf.Struct config = 3;
    string initiatedByUserId = 4;
    int32 status = 5;
    google.protobuf.Struct resultDetails = 6;
}
message branchPurchaseOrder {
    string id = 1;
    string branchId = 2;
    string requestedByUserId = 3;
    repeated google.protobuf.Struct items = 4;
    int32 status = 5;
    string approvedByUserId = 6;
    google.protobuf.Timestamp approvalDate = 7;
    string note = 8;
}
message tregt {
    string id = 1;
}
message adminOpsShareToken {
    string id = 1;
    string configName = 2;
    string objectName = 3;
    string objectId = 4;
    string ownerId = 5;
    string peopleOption = 6;
    string tokenPermissions = 7;
    string allowedEmails = 8;
    google.protobuf.Timestamp expireDate = 9;
}











message VoidRequest {}

message CurrentUserReply {
    string userId = 1;
    string sessionId = 2;
    string fullname = 3;
    string email = 4;
    string roleId = 5;
    string avatar = 6;
    bool emailVerified = 7;
        string mobile = 8;
    bool mobileVerified = 9;        repeated string userGroupNames = 10;
    repeated string userGroupIdList = 11;string accessToken = 12;
}

message HelloMessageReply {
    string hello = 1;
}

service adminOpsService {
    rpc currentUser(VoidRequest) returns (CurrentUserReply);
    rpc helloMessage(VoidRequest) returns (HelloMessageReply);
}